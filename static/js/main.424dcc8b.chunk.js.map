{"version":3,"sources":["images/header-logo.png","mintbtn.js","comingsoon.js","Home.js","App.js","index.js"],"names":["require","config","giveawaysale","privatesale","Publicsale_mint","team_saleWL","flip_giveawaySaleStatus","flip_privateSaleStatus","public_saleStatus","Team_saleStatus","REACT_APP_CONTRACT_ADDRESS","process","SELECTEDNETWORK","nftquantity","statusflag","Mintbtn","useState","errormsg","setErrorMsg","quantity","setQuantity","totalSupply","settotalSupply","setsupply","walletConnected","setWalletConnected","maxAllowd","setMaxAllowed","a","detectEthereumProvider","window","web3","Web3","ethereum","enable","eth","getAccounts","metaMaskAccount","net","getId","ct","Contract","abi","methods","publicSale_price","call","publicprice","privateSale_price","secondwhitelist_price","current","Number","giveawayMint","send","from","privateSale","value","mint","team_Mint","privateSale_supply","currentProvider","SingleWl_isWhiteListed","is_WLprivateSale","isteamMember","publicSale_status","giveawayMint_status","privateSale_status","teamMintSale_status","console","log","useEffect","handleEthereum","isMetaMask","addEventListener","once","setTimeout","className","onClick","connectWallet","disabled","loadWeb3","navigation","class","src","logo","alt","Home","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.424dcc8b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.aebabf09.png\";","import \"./mintbtn.css\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport abi from \"./abi.json\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nrequire(\"dotenv\").config();\r\nconst { REACT_APP_CONTRACT_ADDRESS } = process.env;\r\nconst SELECTEDNETWORK = \"1\";\r\nconst SELECTEDNETWORKNAME = \"Ethereum Mainnet\";\r\nconst nftquantity = 4444;\r\n\r\nlet giveawaysale;\r\nlet privatesale;\r\nlet teammintsale;\r\nlet Publicsale_mint;\r\nlet team_saleWL;\r\n\r\nlet flip_giveawaySaleStatus;\r\nlet flip_privateSaleStatus;\r\nlet public_saleStatus;\r\nlet Team_saleStatus;\r\n\r\nlet statusflag = false;\r\n\r\nfunction Mintbtn() {\r\n  // const [firstPS_whiteliststatus, setfirstPS_whiteliststatus] = useState(false);\r\n\r\n  let walletconnection = 0;\r\n\r\n  const [errormsg, setErrorMsg] = useState(false);\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [totalSupply, settotalSupply] = useState(0);\r\n  const [supply, setsupply] = useState(0);\r\n  const [walletConnected, setWalletConnected] = useState(0);\r\n  const [whitelistedUser, setWhitelistedUser] = useState(0);\r\n\r\n  const [secondwhitelist_price, setsecondwhitelist_price] = useState(0);\r\n  const [publicprice, setpublicprice] = useState(0);\r\n  const [maxAllowd, setMaxAllowed] = useState(0);\r\n\r\n  useEffect(async () => {\r\n    if (await detectEthereumProvider()) {\r\n      // setProvider(true);\r\n      window.web3 = new Web3(window.ethereum);\r\n      const web3 = window.web3;\r\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\r\n        const contractaddress = REACT_APP_CONTRACT_ADDRESS;\r\n        const ct = new web3.eth.Contract(abi, contractaddress);\r\n        settotalSupply(await ct.methods.totalSupply().call());\r\n\r\n        if (nftquantity - (await ct.methods.totalSupply().call()) == 0) {\r\n          setErrorMsg(\"All NFTs minted, Sale has ended\");\r\n        }\r\n      } else {\r\n        // setProvider(false);\r\n        setErrorMsg(\r\n          'Select \"' +\r\n          SELECTEDNETWORKNAME +\r\n          '\" network in your wallet to buy the nft'\r\n        );\r\n      }\r\n    } else {\r\n      setErrorMsg(\r\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      );\r\n      // setProvider(false);\r\n    }\r\n    if (window.ethereum) {\r\n      handleEthereum();\r\n    } else {\r\n      window.addEventListener(\"ethereum#initialized\", handleEthereum, {\r\n        once: true,\r\n      });\r\n      setTimeout(handleEthereum, 10000);\r\n    }\r\n\r\n    function handleEthereum() {\r\n      const { ethereum } = window;\r\n      if (ethereum && ethereum.isMetaMask) {\r\n        // console.log(\"Ethereum successfully detected!\");\r\n        // setProvider(true);\r\n      } else {\r\n        setErrorMsg(\"Please install MetaMask!\");\r\n        // setProvider(false);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  async function loadWeb3() {\r\n    if (await detectEthereumProvider()) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      const web3 = window.web3;\r\n      // Meta Mask Connected Account Address\r\n      let metaMaskAccount = await web3.eth.getAccounts();\r\n      metaMaskAccount = metaMaskAccount[0];\r\n\r\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\r\n        // // creating contract instance\r\n        const contractaddress = REACT_APP_CONTRACT_ADDRESS;\r\n        const ct = new web3.eth.Contract(abi, contractaddress);\r\n\r\n        let publicprice = await ct.methods.publicSale_price().call();\r\n        let secondwhitelist_price = await ct.methods.privateSale_price().call();\r\n\r\n        let current = await ct.methods.totalSupply().call();\r\n        if (Number(current) === nftquantity) {\r\n          // console.log(\"Sold out\");\r\n          return;\r\n        }\r\n\r\n        if (giveawaysale == true && flip_giveawaySaleStatus == true) {\r\n          // console.log(\"In prestae function \", metaMaskAccount);\r\n          // let balance =\r\n          //   (await ct.methods.balanceOf(metaMaskAccount).call()) > 0;\r\n          // if (balance > 0) {\r\n          //   alert(\"Already Minted Free in First whitelist\");\r\n          //   return;\r\n          // }\r\n          await ct.methods\r\n            .giveawayMint(quantity)\r\n            .send({ from: metaMaskAccount });\r\n        }\r\n\r\n        if (privatesale == true && flip_privateSaleStatus == true) {\r\n          // console.log(\"In second function\");\r\n          await ct.methods.privateSale(quantity).send({\r\n            from: metaMaskAccount,\r\n            value: secondwhitelist_price * quantity,\r\n          });\r\n        }\r\n\r\n        if (\r\n          public_saleStatus == true &&\r\n          Publicsale_mint == true &&\r\n          statusflag == true\r\n        ) {\r\n          statusflag = false;\r\n          // console.log(\"In public function\");\r\n          await ct.methods\r\n            .mint(quantity)\r\n            .send({ from: metaMaskAccount, value: publicprice * quantity });\r\n        }\r\n        if (team_saleWL == true && Team_saleStatus == true) {\r\n          // console.log(\"In third function\");\r\n          await ct.methods.team_Mint(quantity).send({ from: metaMaskAccount });\r\n        }\r\n\r\n        // await ct.methods.mint(quantity).send({ from: metaMaskAccount });\r\n        settotalSupply(await ct.methods.totalSupply().call());\r\n        setsupply(await ct.methods.privateSale_supply().call());\r\n        setQuantity(1);\r\n      } else {\r\n        setErrorMsg(\r\n          'Select \"' +\r\n          SELECTEDNETWORKNAME +\r\n          '\" network in your wallet to buy the nft'\r\n        );\r\n      }\r\n    } else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      // window.alert(\r\n      //   \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n      // );\r\n      {\r\n        setErrorMsg(\r\n          \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  async function connectWallet() {\r\n    if (await detectEthereumProvider()) {\r\n      window.web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable();\r\n      const web3 = window.web3;\r\n\r\n      if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\r\n        // // creating contract instance\r\n        const contractaddress = REACT_APP_CONTRACT_ADDRESS;\r\n        const ct = new web3.eth.Contract(abi, contractaddress);\r\n\r\n        let metaMaskAccount = await web3.eth.getAccounts();\r\n        metaMaskAccount = metaMaskAccount[0];\r\n\r\n        giveawaysale = await ct.methods\r\n          .SingleWl_isWhiteListed(metaMaskAccount)\r\n          .call();\r\n        privatesale = await ct.methods.is_WLprivateSale(metaMaskAccount).call();\r\n        team_saleWL = await ct.methods.isteamMember(metaMaskAccount).call();\r\n        Publicsale_mint = await ct.methods.publicSale_status().call();\r\n\r\n        flip_giveawaySaleStatus = await ct.methods.giveawayMint_status().call();\r\n        flip_privateSaleStatus = await ct.methods.privateSale_status().call();\r\n        public_saleStatus = await ct.methods.publicSale_status().call();\r\n        Team_saleStatus = await ct.methods.teamMintSale_status().call();\r\n\r\n        console.log(giveawaysale);\r\n        console.log(flip_giveawaySaleStatus);\r\n        console.log(privatesale);\r\n        console.log(flip_privateSaleStatus);\r\n\r\n        if (flip_giveawaySaleStatus == true && giveawaysale == true) {\r\n          setWalletConnected(1);\r\n          setMaxAllowed(1);\r\n        } else if (privatesale == true && flip_privateSaleStatus == true) {\r\n          setWalletConnected(1);\r\n          setMaxAllowed(10);\r\n        } else if (Publicsale_mint == true) {\r\n          setWalletConnected(1);\r\n          statusflag = true;\r\n          setMaxAllowed(30);\r\n        } else if (team_saleWL == true && Team_saleStatus == true) {\r\n          setWalletConnected(1);\r\n          setMaxAllowed(100);\r\n        } else {\r\n          setWalletConnected(2);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"BtnDiv\">\r\n      {!errormsg ? (\r\n        <div className=\"\">\r\n          {\" \"}\r\n          <div className=\"\">\r\n            {walletConnected == 0 ? (\r\n              <div className=\"    \">\r\n                <button\r\n                  className=\"mt-3 buy-hover  back-button buy-btn  rounded-pill py-2 px-3 py-lg-3 px-lg-5 ff-momake  mint-btn mx-auto d-block\"\r\n                  onClick={() => {\r\n                    connectWallet();\r\n                  }}\r\n                >\r\n                  Connect Wallet\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {walletConnected == 1 ? (\r\n              <>\r\n                <>\r\n                  <div className=\"\">\r\n                    <div className=\"d-flex justify-content-center align-items-center\">\r\n                      <button\r\n                        className=\"count buttonmint text-white btn mx-3 \"\r\n                        onClick={() => setQuantity(quantity - 1)}\r\n                        disabled={quantity == 1}\r\n                      >\r\n                        {\" \"}\r\n                        -{\" \"}\r\n                      </button>\r\n                      <span className=\"buttonmint_counter text-white  quantity\">\r\n                        {\" \"}\r\n                        {quantity}{\" \"}\r\n                      </span>\r\n                      <button\r\n                        className=\"buttonmint text-white  count btn mx-3 \"\r\n                        onClick={() => setQuantity(quantity + 1)}\r\n                        disabled={quantity == maxAllowd}\r\n                      >\r\n                        {\" \"}\r\n                        +{\" \"}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <br></br>\r\n                  <div className=\" pt-3 pt-sm-0\">\r\n\r\n                    <button\r\n                      className=\"mt-3 buy-hover  back-button buy-btn  rounded-pill py-2 px-3 py-lg-3 px-lg-5 ff-momake  mint-btn mx-auto d-block\"\r\n                      onClick={() => {\r\n                        loadWeb3();\r\n                      }}\r\n                    >\r\n                      Mint Now!\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              </>\r\n            ) : (\r\n              \" \"\r\n            )}\r\n            {walletConnected == 2 ? (\r\n              <h6 className=\"text-center text-white teamname w-100\">\r\n                You are not eligible for the private sale              </h6>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            <p className=\"mt-3 text-white mx-auto mb-0 text-center\">\r\n              {nftquantity - totalSupply}/{nftquantity} Available\r\n              {/* {supply}/{444} Available */}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h5 className=\"mt-2 supplytext\">\r\n          <b>{errormsg}</b>\r\n        </h5>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mintbtn;\r\n","import React from \"react\";\r\nimport logo from \"./images/header-logo.png\";\r\nimport \"./comingsoon.css\";\r\nimport Mintbtn from \"./mintbtn\";\r\nfunction navigation() {\r\n  return (\r\n    <div class=\"container-fluid\">\r\n      <div className=\"contianer\">\r\n        <div class=\"row d-flex justify-content-center \">\r\n          <div className=\"col-md-4\"></div>\r\n\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col\"></div>\r\n              <div className=\"col colNew\">\r\n                <img class=\"nav-logo \" src={logo} alt=\"logo\" />\r\n              </div>\r\n              <div className=\"col\"></div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-4\"></div>\r\n\r\n          {/* <div className=\"col-md-12 \">\r\n            <img class=\"nav-logo \" src={logo} alt=\"logo\" />{\" \"}  */}\r\n          {/* <span class=\"justify-content-center sub-heading ff-momake\">The Poker Faces Club</span> */}\r\n\r\n          {/* </div> */}\r\n        </div>{\" \"}\r\n      </div>\r\n\r\n      <div class=\"row  \">\r\n        <div\r\n          class=\"col-md-12 middlediv  z-index\"\r\n          data-aos=\"fade-up\"\r\n          data-aos-duration=\"3000\"\r\n        >\r\n          <h1 class=\"text-center   ff-momake\">\r\n            <span class=\"heading1  d-inline-block \"> THE POKER FACES CLUB</span>\r\n          </h1 >\r\n\r\n\r\n          <h1 class=\"text-center   ff-momake\">\r\n            <Mintbtn></Mintbtn>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default navigation;\r\n","import React from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\r\nimport Comingsoon from './comingsoon';\r\nimport mintbtn from './mintbtn';\r\nimport './Home.css'\r\n\r\n\r\nconst Home=()=>{\r\n\r\n    return(\r\n        <div className='main'>\r\n            <Comingsoon/>\r\n        </div>\r\n      \r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Home;","import Home from \"./Home\"\r\n// import Counter from \"./Counter\";\r\nimport ComingSoon from \"./comingsoon\";\r\nimport react  from 'react'\r\nimport { render } from \"react-dom\";\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <Home />\r\n    // <Routes>\r\n    //   <Route path=\"/\" element={<Home />} />\r\n    //   <Route path=\"/breeding\" element={<ComingSoon />} />\r\n    // </Routes>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n// import './App.css';\r\nimport App from \"./App\"\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n <App /> \r\n  </BrowserRouter>,\r\n \r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}